{"ast":null,"code":"var _jsxFileName = \"/Users/kavinparikh/Documents/GitHub/Portfolio/my-portfolio/src/pages/Projects.js\";\nimport React from 'react';\nimport '../css/Projects.css'; // Ensure you have this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  title: 'Realtime Analysis',\n  description: 'Python project for real-time data analysis, focusing on live data processing and visualization to extract actionable insights.',\n  link: 'https://github.com/kavin-cmd/realtime-analysis'\n}, {\n  title: 'Customer Churn Prediction',\n  description: 'Designed and deployed a high-performing customer churn prediction model using Random Forests. Achieved significant accuracy improvements through hyperparameter tuning with GridSearchCV, delivering actionable insights to improve customer retention strategies.',\n  link: 'https://github.com/kavin-cmd/Customer-Churn-Prediction'\n}, {\n  title: 'Sales Prediction',\n  description: 'Developed a predictive model to forecast customer behavior in response to different pricing strategies using Python. Implemented various machine learning algorithms to optimize sales strategies and improve revenue.',\n  link: 'https://github.com/kavin-cmd/SalesPrediction'\n}, {\n  title: 'Federated Learning on MNIST Database',\n  description: 'Developed an improved model for determining the effect of Byzantine clients in a federated learning model based on the MNIST dataset. Introduced a novel Hyperband parameter tuning which improved the accuracy by a significant 15-20% compared to previous experiments.',\n  link: 'https://github.com/kavin-cmd/federated-learning-on-mnist-database'\n}, {\n  title: 'Energy-Aware Coverage Control and Information Learning',\n  description: 'Focused on energy-aware coverage control and information learning, utilizing Python to enhance efficiency in energy management and data analysis.',\n  link: 'https://github.com/kavin-cmd/Energy-Aware-Coverage-Control-and-Information-Learning-'\n}, {\n  title: 'Privacy-Preserving on Cifar-10',\n  description: 'Applied privacy-preserving methods to the Cifar-10 dataset using Python. Implemented techniques to secure data while maintaining model performance.',\n  link: 'https://github.com/kavin-cmd/Privacy-preserving-on-Cifar-10'\n}, {\n  title: 'Air Quality Forecasting',\n  description: 'Developed a Fusion model using CNN and DNN to predict and analyze the air quality index. Used LIME and SHAP analysis to evaluate feature importance and model performance.',\n  link: 'https://github.com/kavin-cmd/Air-Quality-forecasting'\n}, {\n  title: 'Credit Card Fraud Detection',\n  description: 'Built a machine learning model to detect fraudulent credit card transactions using advanced algorithms and data preprocessing techniques for high accuracy and precision.',\n  link: 'https://github.com/yourusername/credit-card-fraud-detection'\n}, {\n  title: 'Stock Price Prediction',\n  description: 'Created a model to predict stock prices using historical data and machine learning algorithms like LSTM and ARIMA in Python. Applied time series analysis and regression techniques to enhance prediction accuracy.',\n  link: 'https://github.com/yourusername/stock-price-prediction'\n}, {\n  title: 'Cloud Hospital Readmissions',\n  description: 'Analyzed hospital readmissions data using Python and AWS Cloud for data preprocessing and ETL. Compared model performances to identify patterns and reduce readmission rates.',\n  link: 'https://github.com/yourusername/cloud-hospital-readmissions'\n}, {\n  title: 'FPS VR Shooting',\n  description: 'Developed a client-server based virtual reality shooting experience using ASP.NET. Focused on creating an immersive and responsive VR environment.',\n  link: 'https://github.com/yourusername/FPS-VR-SHOOTING'\n}, {\n  title: 'P2P Communication',\n  description: 'Developed a peer-to-peer communication system using C++. Implemented core functionalities for reliable and efficient data exchange.',\n  link: 'https://github.com/yourusername/P2P-communication'\n}, {\n  title: 'Mushroom Classification',\n  description: 'Conducted a data science project for mushroom classification using Jupyter Notebook. Utilized machine learning techniques to classify mushroom species based on various features.',\n  link: 'https://github.com/yourusername/Mushroom-classification'\n}, {\n  title: 'Job Drop Analysis',\n  description: 'Analyzed job drop data using R. Employed data preprocessing, feature engineering, and statistical modeling to provide insights and recommendations for reducing job drop rates.',\n  link: 'https://github.com/yourusername/job-drop-analysis'\n}, {\n  title: 'Plant vs Zombies Local',\n  description: 'Implemented the Plant vs Zombies game in Java. Focused on creating a local version of the popular game with game mechanics and interactive features.',\n  link: 'https://github.com/yourusername/plantvszombieslocal'\n}, {\n  title: 'Java Quiz App',\n  description: 'Developed a quiz application using Java. Created a user-friendly interface and backend logic to support interactive quizzes.',\n  link: 'https://github.com/yourusername/java-quiz-app'\n}, {\n  title: 'Color Detection',\n  description: 'Built a color detection project using Python. Implemented algorithms to detect and classify colors from images or video streams.',\n  link: 'https://github.com/yourusername/color-detection'\n}];\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"projects-title\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-list\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"project-title\",\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"project-description\",\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"project-link\",\n          children: \"View Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","projects","title","description","link","Projects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/kavinparikh/Documents/GitHub/Portfolio/my-portfolio/src/pages/Projects.js"],"sourcesContent":["import React from 'react';\nimport '../css/Projects.css'; // Ensure you have this CSS file for styling\n\nconst projects = [\n    { title: 'Realtime Analysis', description: 'Python project for real-time data analysis, focusing on live data processing and visualization to extract actionable insights.', link: 'https://github.com/kavin-cmd/realtime-analysis' },\n    { title: 'Customer Churn Prediction', description: 'Designed and deployed a high-performing customer churn prediction model using Random Forests. Achieved significant accuracy improvements through hyperparameter tuning with GridSearchCV, delivering actionable insights to improve customer retention strategies.', link: 'https://github.com/kavin-cmd/Customer-Churn-Prediction' },\n    { title: 'Sales Prediction', description: 'Developed a predictive model to forecast customer behavior in response to different pricing strategies using Python. Implemented various machine learning algorithms to optimize sales strategies and improve revenue.', link: 'https://github.com/kavin-cmd/SalesPrediction' },\n    { title: 'Federated Learning on MNIST Database', description: 'Developed an improved model for determining the effect of Byzantine clients in a federated learning model based on the MNIST dataset. Introduced a novel Hyperband parameter tuning which improved the accuracy by a significant 15-20% compared to previous experiments.', link: 'https://github.com/kavin-cmd/federated-learning-on-mnist-database' },\n    { title: 'Energy-Aware Coverage Control and Information Learning', description: 'Focused on energy-aware coverage control and information learning, utilizing Python to enhance efficiency in energy management and data analysis.', link: 'https://github.com/kavin-cmd/Energy-Aware-Coverage-Control-and-Information-Learning-' },\n    { title: 'Privacy-Preserving on Cifar-10', description: 'Applied privacy-preserving methods to the Cifar-10 dataset using Python. Implemented techniques to secure data while maintaining model performance.', link: 'https://github.com/kavin-cmd/Privacy-preserving-on-Cifar-10' },\n    { title: 'Air Quality Forecasting', description: 'Developed a Fusion model using CNN and DNN to predict and analyze the air quality index. Used LIME and SHAP analysis to evaluate feature importance and model performance.', link: 'https://github.com/kavin-cmd/Air-Quality-forecasting' },\n    { title: 'Credit Card Fraud Detection', description: 'Built a machine learning model to detect fraudulent credit card transactions using advanced algorithms and data preprocessing techniques for high accuracy and precision.', link: 'https://github.com/yourusername/credit-card-fraud-detection' },\n    { title: 'Stock Price Prediction', description: 'Created a model to predict stock prices using historical data and machine learning algorithms like LSTM and ARIMA in Python. Applied time series analysis and regression techniques to enhance prediction accuracy.', link: 'https://github.com/yourusername/stock-price-prediction' },\n    { title: 'Cloud Hospital Readmissions', description: 'Analyzed hospital readmissions data using Python and AWS Cloud for data preprocessing and ETL. Compared model performances to identify patterns and reduce readmission rates.', link: 'https://github.com/yourusername/cloud-hospital-readmissions' },\n    { title: 'FPS VR Shooting', description: 'Developed a client-server based virtual reality shooting experience using ASP.NET. Focused on creating an immersive and responsive VR environment.', link: 'https://github.com/yourusername/FPS-VR-SHOOTING' },\n    { title: 'P2P Communication', description: 'Developed a peer-to-peer communication system using C++. Implemented core functionalities for reliable and efficient data exchange.', link: 'https://github.com/yourusername/P2P-communication' },\n    { title: 'Mushroom Classification', description: 'Conducted a data science project for mushroom classification using Jupyter Notebook. Utilized machine learning techniques to classify mushroom species based on various features.', link: 'https://github.com/yourusername/Mushroom-classification' },\n    { title: 'Job Drop Analysis', description: 'Analyzed job drop data using R. Employed data preprocessing, feature engineering, and statistical modeling to provide insights and recommendations for reducing job drop rates.', link: 'https://github.com/yourusername/job-drop-analysis' },\n    { title: 'Plant vs Zombies Local', description: 'Implemented the Plant vs Zombies game in Java. Focused on creating a local version of the popular game with game mechanics and interactive features.', link: 'https://github.com/yourusername/plantvszombieslocal' },\n    { title: 'Java Quiz App', description: 'Developed a quiz application using Java. Created a user-friendly interface and backend logic to support interactive quizzes.', link: 'https://github.com/yourusername/java-quiz-app' },\n    { title: 'Color Detection', description: 'Built a color detection project using Python. Implemented algorithms to detect and classify colors from images or video streams.', link: 'https://github.com/yourusername/color-detection' },\n];\n\nconst Projects = () => {\n  return (\n    <div className=\"projects-container\">\n      <h1 className=\"projects-title\">Projects</h1>\n      <div className=\"projects-list\">\n        {projects.map((project, index) => (\n          <div className=\"project-card\" key={index}>\n            <h2 className=\"project-title\">{project.title}</h2>\n            <p className=\"project-description\">{project.description}</p>\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link\">View Project</a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}