{"ast":null,"code":"var _jsxFileName = \"/Users/kavinparikh/Documents/GitHub/Portfolio/my-portfolio/src/pages/Projects.js\";\nimport React from 'react';\nimport './Projects.css'; // Ensure you have this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  title: 'Customer Churn Prediction',\n  description: 'Designed and deployed a high-performing customer churn prediction model using Random Forests, with tailored feature engineering and one-hot encoding for effective data processing. Achieved significant accuracy improvements through hyperparameter tuning with GridSearchCV, delivering actionable insights. Ensured robust model validation with cross-validation and comprehensive evaluation metrics, positioning the project to drive impactful business decisions through data-driven strategies.',\n  link: 'https://github.com/yourusername/customer-churn-prediction'\n}, {\n  title: 'Sales Prediction',\n  description: 'Developed a predictive model to forecast customer behavior in response to different pricing strategies using Python. Implemented various machine learning algorithms to optimize sales strategies and improve revenue.',\n  link: 'https://github.com/yourusername/sales-prediction'\n}, {\n  title: 'Federated Learning on MNIST Database',\n  description: 'Developed an improved model for determining the effect of Byzantine clients in a federated learning model based on the MNIST dataset. Introduced a novel Hyperband parameter tuning which improved the accuracy by a significant 15-20% compared to previous experiments.',\n  link: 'https://github.com/yourusername/federated-learning-on-mnist-database'\n}, {\n  title: 'Air Quality Forecasting',\n  description: 'Developed a Fusion model using CNN and DNN to predict and analyze the air quality index. Used LIME and SHAP analysis to obtain the performance and importance of every feature. Employed regression models to predict future air quality and provide actionable insights.',\n  link: 'https://github.com/yourusername/air-quality-forecasting'\n}, {\n  title: 'Credit Card Fraud Detection',\n  description: 'Built a machine learning model to detect fraudulent credit card transactions using Jupyter Notebook. Used advanced algorithms and data preprocessing techniques to ensure high accuracy and precision in identifying fraud.',\n  link: 'https://github.com/yourusername/credit-card-fraud-detection'\n}, {\n  title: 'Stock Price Prediction',\n  description: 'Created a model to predict stock prices using historical data and machine learning algorithms like LSTM and ARIMA in Python. Applied time series analysis and regression techniques to enhance prediction accuracy.',\n  link: 'https://github.com/yourusername/stock-price-prediction'\n}, {\n  title: 'Cloud Hospital Readmissions',\n  description: 'Analyzed hospital readmissions data using Python for data preprocessing and ETL. Compared model performances to identify patterns and reduce readmission rates.',\n  link: 'https://github.com/yourusername/cloud-hospital-readmissions'\n}, {\n  title: 'Job Drop Analysis',\n  description: 'Conducted an analysis to identify factors leading to job drops using R. Employed data preprocessing, feature engineering, and statistical modeling to provide insights and recommendations for reducing job drop rates.',\n  link: 'https://github.com/yourusername/job-drop-analysis'\n}, {\n  title: 'Good Neighbour Challenge',\n  description: 'Community volunteering application, forked from tester-1226/cm.',\n  link: 'https://github.com/yourusername/goodneighbourchallenge'\n}, {\n  title: 'P2P Communication',\n  description: 'Peer-to-peer communication system using C++.',\n  link: 'https://github.com/yourusername/P2P-communication'\n}, {\n  title: 'UGA Hacks 8 - Travel Weather Application',\n  description: 'Travel weather application built with HTML.',\n  link: 'https://github.com/yourusername/UGA-Hacks-8---travel-weather-application'\n}, {\n  title: 'Mushroom Classification',\n  description: 'Data science project for mushroom classification using Jupyter Notebook.',\n  link: 'https://github.com/yourusername/Mushroom-classification'\n}, {\n  title: 'Plant vs Zombies Local',\n  description: 'Java-based implementation of the Plant vs Zombies game.',\n  link: 'https://github.com/yourusername/plantvszombieslocal'\n}, {\n  title: 'Java Quiz App',\n  description: 'Quiz application built in Java.',\n  link: 'https://github.com/yourusername/java-quiz-app'\n}, {\n  title: 'Color Detection',\n  description: 'Color detection project using Python.',\n  link: 'https://github.com/yourusername/color-detection'\n}];\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"projects-title\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-list\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"project-title\",\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"project-description\",\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"project-link\",\n          children: \"View Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","projects","title","description","link","Projects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/kavinparikh/Documents/GitHub/Portfolio/my-portfolio/src/pages/Projects.js"],"sourcesContent":["import React from 'react';\nimport './Projects.css'; // Ensure you have this CSS file for styling\n\nconst projects = [\n    { title: 'Customer Churn Prediction', description: 'Designed and deployed a high-performing customer churn prediction model using Random Forests, with tailored feature engineering and one-hot encoding for effective data processing. Achieved significant accuracy improvements through hyperparameter tuning with GridSearchCV, delivering actionable insights. Ensured robust model validation with cross-validation and comprehensive evaluation metrics, positioning the project to drive impactful business decisions through data-driven strategies.', link: 'https://github.com/yourusername/customer-churn-prediction' },\n    { title: 'Sales Prediction', description: 'Developed a predictive model to forecast customer behavior in response to different pricing strategies using Python. Implemented various machine learning algorithms to optimize sales strategies and improve revenue.', link: 'https://github.com/yourusername/sales-prediction' },\n    { title: 'Federated Learning on MNIST Database', description: 'Developed an improved model for determining the effect of Byzantine clients in a federated learning model based on the MNIST dataset. Introduced a novel Hyperband parameter tuning which improved the accuracy by a significant 15-20% compared to previous experiments.', link: 'https://github.com/yourusername/federated-learning-on-mnist-database' },\n    { title: 'Air Quality Forecasting', description: 'Developed a Fusion model using CNN and DNN to predict and analyze the air quality index. Used LIME and SHAP analysis to obtain the performance and importance of every feature. Employed regression models to predict future air quality and provide actionable insights.', link: 'https://github.com/yourusername/air-quality-forecasting' },\n    { title: 'Credit Card Fraud Detection', description: 'Built a machine learning model to detect fraudulent credit card transactions using Jupyter Notebook. Used advanced algorithms and data preprocessing techniques to ensure high accuracy and precision in identifying fraud.', link: 'https://github.com/yourusername/credit-card-fraud-detection' },\n    { title: 'Stock Price Prediction', description: 'Created a model to predict stock prices using historical data and machine learning algorithms like LSTM and ARIMA in Python. Applied time series analysis and regression techniques to enhance prediction accuracy.', link: 'https://github.com/yourusername/stock-price-prediction' },\n    { title: 'Cloud Hospital Readmissions', description: 'Analyzed hospital readmissions data using Python for data preprocessing and ETL. Compared model performances to identify patterns and reduce readmission rates.', link: 'https://github.com/yourusername/cloud-hospital-readmissions' },\n    { title: 'Job Drop Analysis', description: 'Conducted an analysis to identify factors leading to job drops using R. Employed data preprocessing, feature engineering, and statistical modeling to provide insights and recommendations for reducing job drop rates.', link: 'https://github.com/yourusername/job-drop-analysis' },\n    { title: 'Good Neighbour Challenge', description: 'Community volunteering application, forked from tester-1226/cm.', link: 'https://github.com/yourusername/goodneighbourchallenge' },\n    { title: 'P2P Communication', description: 'Peer-to-peer communication system using C++.', link: 'https://github.com/yourusername/P2P-communication' },\n    { title: 'UGA Hacks 8 - Travel Weather Application', description: 'Travel weather application built with HTML.', link: 'https://github.com/yourusername/UGA-Hacks-8---travel-weather-application' },\n    { title: 'Mushroom Classification', description: 'Data science project for mushroom classification using Jupyter Notebook.', link: 'https://github.com/yourusername/Mushroom-classification' },\n    { title: 'Plant vs Zombies Local', description: 'Java-based implementation of the Plant vs Zombies game.', link: 'https://github.com/yourusername/plantvszombieslocal' },\n    { title: 'Java Quiz App', description: 'Quiz application built in Java.', link: 'https://github.com/yourusername/java-quiz-app' },\n    { title: 'Color Detection', description: 'Color detection project using Python.', link: 'https://github.com/yourusername/color-detection' },\n];\n\nconst Projects = () => {\n  return (\n    <div className=\"projects-container\">\n      <h1 className=\"projects-title\">Projects</h1>\n      <div className=\"projects-list\">\n        {projects.map((project, index) => (\n          <div className=\"project-card\" key={index}>\n            <h2 className=\"project-title\">{project.title}</h2>\n            <p className=\"project-description\">{project.description}</p>\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link\">View Project</a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}